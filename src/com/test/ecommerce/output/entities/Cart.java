package com.test.ecommerce.output.entities;

import static javax.persistence.GenerationType.IDENTITY;

// default package
// Generated Mar 23, 2016 4:48:05 PM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Cart generated by hbm2java
 */
@Entity(name = "cart")
@Table(name = "CART", catalog = "Ankita")
public class Cart implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer orderId;
	private String quantityOrdered;
	private BigDecimal CProdPrice;
	private BigDecimal totalAmount;
	private int productId;

	/*
	 * Building One-to-One relationship with Customer, Orders
	 * 
	 */
	private Customer customer;
	private Product product;

	// TODO need to verify if needs some changes for Orders
	private Orders orders;

	/*
	 * Building One-to-Many relationship with Product and Carddetails
	 */
	// private Set<Product> product;
	private Set<Carddetails> carddetails;

	public Cart() {
	}

	/*
	 * Modified Constructors to support mapping
	 */
	public Cart(Customer customer, Product product, String quantityOrdered, BigDecimal CProdPrice,
			BigDecimal totalAmount) {
		this.customer = customer;
		this.product = product;
		this.quantityOrdered = quantityOrdered;
		this.CProdPrice = CProdPrice;
		this.totalAmount = totalAmount;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ORDER_ID", unique = true, nullable = false)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	/*
	 * Added to Support One to One mapping with Customer
	 */
	@OneToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "CUSTOMER_ID", nullable = false)
	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	/*
	 * Added to Support One to One mapping with Customer
	 */
	@OneToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "Product_ID", nullable = false)
	public Product getProduct() {
		return product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	// TODO c_prod_price should come from product SELLING_PRICE table
	// @OneToOne(cascade = CascadeType.ALL)
	@Column(name = "C_PROD_PRICE", nullable = false)
	public BigDecimal getCProdPrice() {
		return this.CProdPrice;
	}

	public void setCProdPrice(BigDecimal CProdPrice) {
		this.CProdPrice = CProdPrice;
	}

	/*
	 * Added to support One to Many mapping with Product and Carddetails
	 */
	/*
	 * @OneToMany(fetch = FetchType.LAZY, mappedBy = "cart") public Set<Product>
	 * getProduct() { return this.product; }
	 * 
	 * public void setProduct(Set<Product> product) { this.product = product; }
	 */

	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "cart")
	// @JoinColumn(name = "PRODUCT_ID")

	/*@Column(name = "PRODUCT_ID")
	public int getProductId() {
		return this.productId;
	}

	public void setProductId(int productId) {
		this.productId = productId;
	}*/

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cart")
	public Set<Carddetails> getCarddetails() {
		return this.carddetails;
	}

	public void setCarddetails(Set<Carddetails> carddetails) {
		this.carddetails = carddetails;
	}

	@Column(name = "QUANTITY_ORDERED", nullable = false, length = 20)
	public String getQuantityOrdered() {
		return this.quantityOrdered;
	}

	public void setQuantityOrdered(String quantityOrdered) {
		this.quantityOrdered = quantityOrdered;
	}

	@Column(name = "TOTAL_AMOUNT", nullable = false, precision = 10)
	public BigDecimal getTotalAmount() {
		return this.totalAmount;
	}

	public void setTotalAmount(BigDecimal totalAmount) {
		this.totalAmount = totalAmount;
	}

}
