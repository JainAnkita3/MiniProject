package com.test.ecommerce.output.entities;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Set;

import javax.persistence.CascadeType;

// default package
// Generated Mar 23, 2016 4:48:05 PM by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Customer generated by hbm2java
 */
@Entity(name = "customer")
@Table(name = "CUSTOMER", catalog = "Ankita")
public class Customer implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer customerId;
	private String firstName;
	private String lastName;
	private String password;
	private String email;
	private Integer phNumber;

	/*
	 * Building One-to-Many relationship with Addresses, Carddetails,
	 * Orders
	 * 
	 * One-to-One with Cart
	 */
	private Set<Addresses> addresses;
	private Set<Carddetails> carddetails;
	private Set<Orders> orders;
	private Cart cart;

	public Customer() {
	}

	public Customer(String firstName, String password, String email) {
		this.firstName = firstName;
		this.password = password;
		this.email = email;
	}

	public Customer(String firstName, String lastName, String password, String email, Integer phNumber) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.password = password;
		this.email = email;
		this.phNumber = phNumber;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "CUSTOMER_ID", unique = true, nullable = false)
	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	@Column(name = "FIRST_NAME", nullable = false, length = 20)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", length = 20)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "PASSWORD", nullable = false, length = 4)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "EMAIL", unique = true, nullable = false, length = 55)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PH_NUMBER")
	public Integer getPhNumber() {
		return this.phNumber;
	}

	public void setPhNumber(Integer phNumber) {
		this.phNumber = phNumber;
	}

	/*
	 * Added to support One to Many mapping
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Addresses> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Addresses> addresses) {
		this.addresses = addresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Carddetails> getCardDetails() {
		return this.carddetails;
	}

	public void setCardDetails(Set<Carddetails> carddetails) {
		this.carddetails = carddetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Orders> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Orders> orders) {
		this.orders = orders;
	}

	// TODO do we really need this? Will it get the whole cart of customer?
	/*
	 * Added to support One to One mapping with Cart
	 */
	@OneToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "CUSTOMER_ID")
	public Cart getCart() {
		return cart;
	}

	public void setCart(Cart cart) {
		this.cart = cart;
	}
}
